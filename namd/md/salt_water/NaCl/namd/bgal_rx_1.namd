source module/Apps.tm

######################################################
# Author: Steven(Yuhang) Wang
# License: CC BY 4.0 (creativecommons.org/licenses/by/4.0)
# Date:   07/07/2017
######################################################

set stage     1
set pre       [expr $stage - 1]
set isRestart [expr $stage > 1 ? true : false]

set replicaId      [::myReplica]
set temperature    310
set save_freq      20
set em_steps       100
set total_steps    100
set block_steps    20
set output_dir     "../output/replica/md${stage}/${replicaId}"
file mkdir $output_dir

::namd::IO [dict create \
    structure       "../system/betagal.psf" \
    coordinates     "../system/betagal.pdb" \
    output_prefix   "${output_dir}/md${stage}" \
    input_prefix    "${output_dir}/md${pre}.restart" \
    isRestart       $isRestart \
    isReplica       true \
]

::namd::forceField "charmm" [list \
    "../forcefield/par_all36m_prot.prm" \
    "../forcefield/par_all36_na.prm" \
    "../forcefield/par_all36_lipid.prm" \
    "../forcefield/par_all36_carb.prm" \
    "../forcefield/par_all36_cgenff.prm" \
    "../forcefield/toppar_water_ions.str" \
]

::namd::interaction [dict create \
    cutoff       12.0 \
]

::namd::outputFrequency [dict create \
    dcd          $save_freq \
    restart      $save_freq \
    xst          $save_freq \
    energy       $save_freq \
    pressure     $save_freq \
]

::namd::integrator [dict create \
    time_step     2.0 \
]
    
::namd::GB {}

::namd::T [dict create \
    T $temperature \
    isRestart $isRestart \
]

::namd::LangevinT [dict create \
    T $temperature \
]

#========================================================
set grid_params [::list \
    [::dict create \
        dx             "${output_dir}/link.dx" \
        label          "../restraint/ion_grid_label.pdb" \
        pbc            {no no no} \
        scaling        {1 1 1} \
    ]\
]




set grid_files [::dict create \
    src "../map/%d.dx" \
    link "${output_dir}/link.dx" \
]


set rx_specs [::dict create \
    variable grid \
    algorithm MH \
    params [dict create \
        T $temperature \
        grid_files  $grid_files \
        grid_params $grid_params \
    ] \
]

set i G1
mgridForce             on
mgridForceFile $i      ../restraint/betagal_grid_label.pdb
mgridForceCol $i       O
mgridForceChargeCol $i B
mgridForcePotFile $i   ../map/betagal.dx
mgridForceScale $i     1 1 1
reloadGridforceGrid    G1
run 0
exit

::namd::rx::initializeGrid $rx_specs
::namd::gridForce $grid_params
::run 0
# reloadGridforceGrid 0
exit

::namd::rx::run [::dict create \
    restart $isRestart \
    steps [dict create \
        total $total_steps \
        block $block_steps \
    ] \
    log "../output/replica/md${stage}/$replicaId/md${stage}.rxlog" \
    rx  $rx_specs\
]

#========================================================


# puts "======================================="
# # puts "namespace of "
# # puts [namespace which -command seed]
# puts "tcl version: $tcl_version"
# interp recursionlimit {} 5000
# puts "recursion limit: [interp recursionlimit {}]"
# puts "======================================="
# startup
# exit

