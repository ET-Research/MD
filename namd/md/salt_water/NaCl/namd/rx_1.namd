source module/Apps.tm

######################################################
# Author: Steven(Yuhang) Wang
# License: CC BY 4.0 (creativecommons.org/licenses/by/4.0)
# Date:   07/07/2017
######################################################

set stage     1
set pre       [expr $stage - 1]
set isRestart [expr $stage > 1 ? true : false]

set replicaId      [::myReplica]
set temperature    310
set save_freq      20
set em_steps       100
set total_steps    100
set block_steps     20

exec mkdir -p "../output/replica/${replicaId}/md${stage}"

::namd::IO [dict create \
    structure       "../system/ion.psf" \
    coordinates     "../system/ion.pdb" \
    output_prefix   "../output/replica/${replicaId}/md${stage}/md${stage}" \
    input_prefix    "../output/replica/${replicaId}/md${pre}/md${pre}.restart" \
    isRestart       $isRestart \
    isReplica       true \
]

::namd::forceField "charmm" [list \
    "../forcefield/par_all36m_prot.prm" \
    "../forcefield/par_all36_na.prm" \
    "../forcefield/par_all36_lipid.prm" \
    "../forcefield/par_all36_carb.prm" \
    "../forcefield/par_all36_cgenff.prm" \
    "../forcefield/toppar_water_ions.str" \
]


::namd::interaction [dict create \
    cutoff       12.0 \
]

::namd::outputFrequency [dict create \
    dcd          $save_freq \
    restart      $save_freq \
    xst          $save_freq \
    energy       $save_freq \
    pressure     $save_freq \
]

::namd::integrator [dict create \
    time_step     2.0 \
]
    
::namd::GB {}

::namd::T [dict create \
    T $temperature \
    isRestart $isRestart \
]

::namd::LangevinT [dict create \
    T $temperature \
]

margin 5

puts "======="
if { ! [catch numPes] } {
    ::namd::rx::run [dict create \
        restart $isRestart \
        steps [dict create \
            total $total_steps \
            block $block_steps \
        ] \
        output "../output/replica/md${stage}/$replicaId/md${stage}.xlog" \
        type grid \
        algorithm MH \
        params [dict create \
            T $temperature \
        ] \
        template [::dict create \
            src 
        ]\
    ]
}


puts "======================================="
# puts "namespace of "
# puts [namespace which -command seed]
puts "tcl version: $tcl_version"
interp recursionlimit {} 5000
puts "recursion limit: [interp recursionlimit {}]"
puts "======================================="
startup
exit
